{"name":"Anonymous","input":["/*!","\tautosize 4.0.2","\tlicense: MIT","\thttp://www.jacklmoore.com/autosize","*/","(function (global, factory) {","\tif (typeof define === \"function\" && define.amd) {","\t\tdefine(['module', 'exports'], factory);","\t} else if (typeof exports !== \"undefined\") {","\t\tfactory(module, exports);","\t} else {","\t\tvar mod = {","\t\t\texports: {}","\t\t};","\t\tfactory(mod, mod.exports);","\t\tglobal.autosize = mod.exports;","\t}","})(this, function (module, exports) {","\t'use strict';","","\tvar map = typeof Map === \"function\" ? new Map() : function () {","\t\tvar keys = [];","\t\tvar values = [];","","\t\treturn {","\t\t\thas: function has(key) {","\t\t\t\treturn keys.indexOf(key) > -1;","\t\t\t},","\t\t\tget: function get(key) {","\t\t\t\treturn values[keys.indexOf(key)];","\t\t\t},","\t\t\tset: function set(key, value) {","\t\t\t\tif (keys.indexOf(key) === -1) {","\t\t\t\t\tkeys.push(key);","\t\t\t\t\tvalues.push(value);","\t\t\t\t}","\t\t\t},","\t\t\tdelete: function _delete(key) {","\t\t\t\tvar index = keys.indexOf(key);","\t\t\t\tif (index > -1) {","\t\t\t\t\tkeys.splice(index, 1);","\t\t\t\t\tvalues.splice(index, 1);","\t\t\t\t}","\t\t\t}","\t\t};","\t}();","","\tvar createEvent = function createEvent(name) {","\t\treturn new Event(name, { bubbles: true });","\t};","\ttry {","\t\tnew Event('test');","\t} catch (e) {","\t\t// IE does not support `new Event()`","\t\tcreateEvent = function createEvent(name) {","\t\t\tvar evt = document.createEvent('Event');","\t\t\tevt.initEvent(name, true, false);","\t\t\treturn evt;","\t\t};","\t}","","\tfunction assign(ta) {","\t\tif (!ta || !ta.nodeName || ta.nodeName !== 'TEXTAREA' || map.has(ta)) return;","","\t\tvar heightOffset = null;","\t\tvar clientWidth = null;","\t\tvar cachedHeight = null;","","\t\tfunction init() {","\t\t\tvar style = window.getComputedStyle(ta, null);","","\t\t\tif (style.resize === 'vertical') {","\t\t\t\tta.style.resize = 'none';","\t\t\t} else if (style.resize === 'both') {","\t\t\t\tta.style.resize = 'horizontal';","\t\t\t}","","\t\t\tif (style.boxSizing === 'content-box') {","\t\t\t\theightOffset = -(parseFloat(style.paddingTop) + parseFloat(style.paddingBottom));","\t\t\t} else {","\t\t\t\theightOffset = parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);","\t\t\t}","\t\t\t// Fix when a textarea is not on document body and heightOffset is Not a Number","\t\t\tif (isNaN(heightOffset)) {","\t\t\t\theightOffset = 0;","\t\t\t}","","\t\t\tupdate();","\t\t}","","\t\tfunction changeOverflow(value) {","\t\t\t{","\t\t\t\t// Chrome/Safari-specific fix:","\t\t\t\t// When the textarea y-overflow is hidden, Chrome/Safari do not reflow the text to account for the space","\t\t\t\t// made available by removing the scrollbar. The following forces the necessary text reflow.","\t\t\t\tvar width = ta.style.width;","\t\t\t\tta.style.width = '0px';","\t\t\t\t// Force reflow:","\t\t\t\t/* jshint ignore:start */","\t\t\t\tta.offsetWidth;","\t\t\t\t/* jshint ignore:end */","\t\t\t\tta.style.width = width;","\t\t\t}","","\t\t\tta.style.overflowY = value;","\t\t}","","\t\tfunction getParentOverflows(el) {","\t\t\tvar arr = [];","","\t\t\twhile (el && el.parentNode && el.parentNode instanceof Element) {","\t\t\t\tif (el.parentNode.scrollTop) {","\t\t\t\t\tarr.push({","\t\t\t\t\t\tnode: el.parentNode,","\t\t\t\t\t\tscrollTop: el.parentNode.scrollTop","\t\t\t\t\t});","\t\t\t\t}","\t\t\t\tel = el.parentNode;","\t\t\t}","","\t\t\treturn arr;","\t\t}","","\t\tfunction resize() {","\t\t\tif (ta.scrollHeight === 0) {","\t\t\t\t// If the scrollHeight is 0, then the element probably has display:none or is detached from the DOM.","\t\t\t\treturn;","\t\t\t}","","\t\t\tvar overflows = getParentOverflows(ta);","\t\t\tvar docTop = document.documentElement && document.documentElement.scrollTop; // Needed for Mobile IE (ticket #240)","","\t\t\tta.style.height = '';","\t\t\tta.style.height = ta.scrollHeight + heightOffset + 'px';","","\t\t\t// used to check if an update is actually necessary on window.resize","\t\t\tclientWidth = ta.clientWidth;","","\t\t\t// prevents scroll-position jumping","\t\t\toverflows.forEach(function (el) {","\t\t\t\tel.node.scrollTop = el.scrollTop;","\t\t\t});","","\t\t\tif (docTop) {","\t\t\t\tdocument.documentElement.scrollTop = docTop;","\t\t\t}","\t\t}","","\t\tfunction update() {","\t\t\tresize();","","\t\t\tvar styleHeight = Math.round(parseFloat(ta.style.height));","\t\t\tvar computed = window.getComputedStyle(ta, null);","","\t\t\t// Using offsetHeight as a replacement for computed.height in IE, because IE does not account use of border-box","\t\t\tvar actualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(computed.height)) : ta.offsetHeight;","","\t\t\t// The actual height not matching the style height (set via the resize method) indicates that ","\t\t\t// the max-height has been exceeded, in which case the overflow should be allowed.","\t\t\tif (actualHeight < styleHeight) {","\t\t\t\tif (computed.overflowY === 'hidden') {","\t\t\t\t\tchangeOverflow('scroll');","\t\t\t\t\tresize();","\t\t\t\t\tactualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;","\t\t\t\t}","\t\t\t} else {","\t\t\t\t// Normally keep overflow set to hidden, to avoid flash of scrollbar as the textarea expands.","\t\t\t\tif (computed.overflowY !== 'hidden') {","\t\t\t\t\tchangeOverflow('hidden');","\t\t\t\t\tresize();","\t\t\t\t\tactualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;","\t\t\t\t}","\t\t\t}","","\t\t\tif (cachedHeight !== actualHeight) {","\t\t\t\tcachedHeight = actualHeight;","\t\t\t\tvar evt = createEvent('autosize:resized');","\t\t\t\ttry {","\t\t\t\t\tta.dispatchEvent(evt);","\t\t\t\t} catch (err) {","\t\t\t\t\t// Firefox will throw an error on dispatchEvent for a detached element","\t\t\t\t\t// https://bugzilla.mozilla.org/show_bug.cgi?id=889376","\t\t\t\t}","\t\t\t}","\t\t}","","\t\tvar pageResize = function pageResize() {","\t\t\tif (ta.clientWidth !== clientWidth) {","\t\t\t\tupdate();","\t\t\t}","\t\t};","","\t\tvar destroy = function (style) {","\t\t\twindow.removeEventListener('resize', pageResize, false);","\t\t\tta.removeEventListener('input', update, false);","\t\t\tta.removeEventListener('keyup', update, false);","\t\t\tta.removeEventListener('autosize:destroy', destroy, false);","\t\t\tta.removeEventListener('autosize:update', update, false);","","\t\t\tObject.keys(style).forEach(function (key) {","\t\t\t\tta.style[key] = style[key];","\t\t\t});","","\t\t\tmap.delete(ta);","\t\t}.bind(ta, {","\t\t\theight: ta.style.height,","\t\t\tresize: ta.style.resize,","\t\t\toverflowY: ta.style.overflowY,","\t\t\toverflowX: ta.style.overflowX,","\t\t\twordWrap: ta.style.wordWrap","\t\t});","","\t\tta.addEventListener('autosize:destroy', destroy, false);","","\t\t// IE9 does not fire onpropertychange or oninput for deletions,","\t\t// so binding to onkeyup to catch most of those events.","\t\t// There is no way that I know of to detect something like 'cut' in IE9.","\t\tif ('onpropertychange' in ta && 'oninput' in ta) {","\t\t\tta.addEventListener('keyup', update, false);","\t\t}","","\t\twindow.addEventListener('resize', pageResize, false);","\t\tta.addEventListener('input', update, false);","\t\tta.addEventListener('autosize:update', update, false);","\t\tta.style.overflowX = 'hidden';","\t\tta.style.wordWrap = 'break-word';","","\t\tmap.set(ta, {","\t\t\tdestroy: destroy,","\t\t\tupdate: update","\t\t});","","\t\tinit();","\t}","","\tfunction destroy(ta) {","\t\tvar methods = map.get(ta);","\t\tif (methods) {","\t\t\tmethods.destroy();","\t\t}","\t}","","\tfunction update(ta) {","\t\tvar methods = map.get(ta);","\t\tif (methods) {","\t\t\tmethods.update();","\t\t}","\t}","","\tvar autosize = null;","","\t// Do nothing in Node.js environment and IE8 (or lower)","\tif (typeof window === 'undefined' || typeof window.getComputedStyle !== 'function') {","\t\tautosize = function autosize(el) {","\t\t\treturn el;","\t\t};","\t\tautosize.destroy = function (el) {","\t\t\treturn el;","\t\t};","\t\tautosize.update = function (el) {","\t\t\treturn el;","\t\t};","\t} else {","\t\tautosize = function autosize(el, options) {","\t\t\tif (el) {","\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], function (x) {","\t\t\t\t\treturn assign(x, options);","\t\t\t\t});","\t\t\t}","\t\t\treturn el;","\t\t};","\t\tautosize.destroy = function (el) {","\t\t\tif (el) {","\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], destroy);","\t\t\t}","\t\t\treturn el;","\t\t};","\t\tautosize.update = function (el) {","\t\t\tif (el) {","\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], update);","\t\t\t}","\t\t\treturn el;","\t\t};","\t}","","\texports.default = autosize;","\tmodule.exports = exports['default'];","});","/*!","\tautosize 4.0.2","\tlicense: MIT","\thttp://www.jacklmoore.com/autosize","*/","(function (global, factory) {","\tif (typeof define === \"function\" && define.amd) {","\t\tdefine(['module', 'exports'], factory);","\t} else if (typeof exports !== \"undefined\") {","\t\tfactory(module, exports);","\t} else {","\t\tvar mod = {","\t\t\texports: {}","\t\t};","\t\tfactory(mod, mod.exports);","\t\tglobal.autosize = mod.exports;","\t}","})(this, function (module, exports) {","\t'use strict';","","\tvar map = typeof Map === \"function\" ? new Map() : function () {","\t\tvar keys = [];","\t\tvar values = [];","","\t\treturn {","\t\t\thas: function has(key) {","\t\t\t\treturn keys.indexOf(key) > -1;","\t\t\t},","\t\t\tget: function get(key) {","\t\t\t\treturn values[keys.indexOf(key)];","\t\t\t},","\t\t\tset: function set(key, value) {","\t\t\t\tif (keys.indexOf(key) === -1) {","\t\t\t\t\tkeys.push(key);","\t\t\t\t\tvalues.push(value);","\t\t\t\t}","\t\t\t},","\t\t\tdelete: function _delete(key) {","\t\t\t\tvar index = keys.indexOf(key);","\t\t\t\tif (index > -1) {","\t\t\t\t\tkeys.splice(index, 1);","\t\t\t\t\tvalues.splice(index, 1);","\t\t\t\t}","\t\t\t}","\t\t};","\t}();","","\tvar createEvent = function createEvent(name) {","\t\treturn new Event(name, { bubbles: true });","\t};","\ttry {","\t\tnew Event('test');","\t} catch (e) {","\t\t// IE does not support `new Event()`","\t\tcreateEvent = function createEvent(name) {","\t\t\tvar evt = document.createEvent('Event');","\t\t\tevt.initEvent(name, true, false);","\t\t\treturn evt;","\t\t};","\t}","","\tfunction assign(ta) {","\t\tif (!ta || !ta.nodeName || ta.nodeName !== 'TEXTAREA' || map.has(ta)) return;","","\t\tvar heightOffset = null;","\t\tvar clientWidth = null;","\t\tvar cachedHeight = null;","","\t\tfunction init() {","\t\t\tvar style = window.getComputedStyle(ta, null);","","\t\t\tif (style.resize === 'vertical') {","\t\t\t\tta.style.resize = 'none';","\t\t\t} else if (style.resize === 'both') {","\t\t\t\tta.style.resize = 'horizontal';","\t\t\t}","","\t\t\tif (style.boxSizing === 'content-box') {","\t\t\t\theightOffset = -(parseFloat(style.paddingTop) + parseFloat(style.paddingBottom));","\t\t\t} else {","\t\t\t\theightOffset = parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);","\t\t\t}","\t\t\t// Fix when a textarea is not on document body and heightOffset is Not a Number","\t\t\tif (isNaN(heightOffset)) {","\t\t\t\theightOffset = 0;","\t\t\t}","","\t\t\tupdate();","\t\t}","","\t\tfunction changeOverflow(value) {","\t\t\t{","\t\t\t\t// Chrome/Safari-specific fix:","\t\t\t\t// When the textarea y-overflow is hidden, Chrome/Safari do not reflow the text to account for the space","\t\t\t\t// made available by removing the scrollbar. The following forces the necessary text reflow.","\t\t\t\tvar width = ta.style.width;","\t\t\t\tta.style.width = '0px';","\t\t\t\t// Force reflow:","\t\t\t\t/* jshint ignore:start */","\t\t\t\tta.offsetWidth;","\t\t\t\t/* jshint ignore:end */","\t\t\t\tta.style.width = width;","\t\t\t}","","\t\t\tta.style.overflowY = value;","\t\t}","","\t\tfunction getParentOverflows(el) {","\t\t\tvar arr = [];","","\t\t\twhile (el && el.parentNode && el.parentNode instanceof Element) {","\t\t\t\tif (el.parentNode.scrollTop) {","\t\t\t\t\tarr.push({","\t\t\t\t\t\tnode: el.parentNode,","\t\t\t\t\t\tscrollTop: el.parentNode.scrollTop","\t\t\t\t\t});","\t\t\t\t}","\t\t\t\tel = el.parentNode;","\t\t\t}","","\t\t\treturn arr;","\t\t}","","\t\tfunction resize() {","\t\t\tif (ta.scrollHeight === 0) {","\t\t\t\t// If the scrollHeight is 0, then the element probably has display:none or is detached from the DOM.","\t\t\t\treturn;","\t\t\t}","","\t\t\tvar overflows = getParentOverflows(ta);","\t\t\tvar docTop = document.documentElement && document.documentElement.scrollTop; // Needed for Mobile IE (ticket #240)","","\t\t\tta.style.height = '';","\t\t\tta.style.height = ta.scrollHeight + heightOffset + 'px';","","\t\t\t// used to check if an update is actually necessary on window.resize","\t\t\tclientWidth = ta.clientWidth;","","\t\t\t// prevents scroll-position jumping","\t\t\toverflows.forEach(function (el) {","\t\t\t\tel.node.scrollTop = el.scrollTop;","\t\t\t});","","\t\t\tif (docTop) {","\t\t\t\tdocument.documentElement.scrollTop = docTop;","\t\t\t}","\t\t}","","\t\tfunction update() {","\t\t\tresize();","","\t\t\tvar styleHeight = Math.round(parseFloat(ta.style.height));","\t\t\tvar computed = window.getComputedStyle(ta, null);","","\t\t\t// Using offsetHeight as a replacement for computed.height in IE, because IE does not account use of border-box","\t\t\tvar actualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(computed.height)) : ta.offsetHeight;","","\t\t\t// The actual height not matching the style height (set via the resize method) indicates that ","\t\t\t// the max-height has been exceeded, in which case the overflow should be allowed.","\t\t\tif (actualHeight < styleHeight) {","\t\t\t\tif (computed.overflowY === 'hidden') {","\t\t\t\t\tchangeOverflow('scroll');","\t\t\t\t\tresize();","\t\t\t\t\tactualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;","\t\t\t\t}","\t\t\t} else {","\t\t\t\t// Normally keep overflow set to hidden, to avoid flash of scrollbar as the textarea expands.","\t\t\t\tif (computed.overflowY !== 'hidden') {","\t\t\t\t\tchangeOverflow('hidden');","\t\t\t\t\tresize();","\t\t\t\t\tactualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;","\t\t\t\t}","\t\t\t}","","\t\t\tif (cachedHeight !== actualHeight) {","\t\t\t\tcachedHeight = actualHeight;","\t\t\t\tvar evt = createEvent('autosize:resized');","\t\t\t\ttry {","\t\t\t\t\tta.dispatchEvent(evt);","\t\t\t\t} catch (err) {","\t\t\t\t\t// Firefox will throw an error on dispatchEvent for a detached element","\t\t\t\t\t// https://bugzilla.mozilla.org/show_bug.cgi?id=889376","\t\t\t\t}","\t\t\t}","\t\t}","","\t\tvar pageResize = function pageResize() {","\t\t\tif (ta.clientWidth !== clientWidth) {","\t\t\t\tupdate();","\t\t\t}","\t\t};","","\t\tvar destroy = function (style) {","\t\t\twindow.removeEventListener('resize', pageResize, false);","\t\t\tta.removeEventListener('input', update, false);","\t\t\tta.removeEventListener('keyup', update, false);","\t\t\tta.removeEventListener('autosize:destroy', destroy, false);","\t\t\tta.removeEventListener('autosize:update', update, false);","","\t\t\tObject.keys(style).forEach(function (key) {","\t\t\t\tta.style[key] = style[key];","\t\t\t});","","\t\t\tmap.delete(ta);","\t\t}.bind(ta, {","\t\t\theight: ta.style.height,","\t\t\tresize: ta.style.resize,","\t\t\toverflowY: ta.style.overflowY,","\t\t\toverflowX: ta.style.overflowX,","\t\t\twordWrap: ta.style.wordWrap","\t\t});","","\t\tta.addEventListener('autosize:destroy', destroy, false);","","\t\t// IE9 does not fire onpropertychange or oninput for deletions,","\t\t// so binding to onkeyup to catch most of those events.","\t\t// There is no way that I know of to detect something like 'cut' in IE9.","\t\tif ('onpropertychange' in ta && 'oninput' in ta) {","\t\t\tta.addEventListener('keyup', update, false);","\t\t}","","\t\twindow.addEventListener('resize', pageResize, false);","\t\tta.addEventListener('input', update, false);","\t\tta.addEventListener('autosize:update', update, false);","\t\tta.style.overflowX = 'hidden';","\t\tta.style.wordWrap = 'break-word';","","\t\tmap.set(ta, {","\t\t\tdestroy: destroy,","\t\t\tupdate: update","\t\t});","","\t\tinit();","\t}","","\tfunction destroy(ta) {","\t\tvar methods = map.get(ta);","\t\tif (methods) {","\t\t\tmethods.destroy();","\t\t}","\t}","","\tfunction update(ta) {","\t\tvar methods = map.get(ta);","\t\tif (methods) {","\t\t\tmethods.update();","\t\t}","\t}","","\tvar autosize = null;","","\t// Do nothing in Node.js environment and IE8 (or lower)","\tif (typeof window === 'undefined' || typeof window.getComputedStyle !== 'function') {","\t\tautosize = function autosize(el) {","\t\t\treturn el;","\t\t};","\t\tautosize.destroy = function (el) {","\t\t\treturn el;","\t\t};","\t\tautosize.update = function (el) {","\t\t\treturn el;","\t\t};","\t} else {","\t\tautosize = function autosize(el, options) {","\t\t\tif (el) {","\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], function (x) {","\t\t\t\t\treturn assign(x, options);","\t\t\t\t});","\t\t\t}","\t\t\treturn el;","\t\t};","\t\tautosize.destroy = function (el) {","\t\t\tif (el) {","\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], destroy);","\t\t\t}","\t\t\treturn el;","\t\t};","\t\tautosize.update = function (el) {","\t\t\tif (el) {","\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], update);","\t\t\t}","\t\t\treturn el;","\t\t};","\t}","","\texports.default = autosize;","\tmodule.exports = exports['default'];","});","/*!","\tautosize 4.0.2","\tlicense: MIT","\thttp://www.jacklmoore.com/autosize","*/","(function (global, factory) {","\tif (typeof define === \"function\" && define.amd) {","\t\tdefine(['module', 'exports'], factory);","\t} else if (typeof exports !== \"undefined\") {","\t\tfactory(module, exports);","\t} else {","\t\tvar mod = {","\t\t\texports: {}","\t\t};","\t\tfactory(mod, mod.exports);","\t\tglobal.autosize = mod.exports;","\t}","})(this, function (module, exports) {","\t'use strict';","","\tvar map = typeof Map === \"function\" ? new Map() : function () {","\t\tvar keys = [];","\t\tvar values = [];","","\t\treturn {","\t\t\thas: function has(key) {","\t\t\t\treturn keys.indexOf(key) > -1;","\t\t\t},","\t\t\tget: function get(key) {","\t\t\t\treturn values[keys.indexOf(key)];","\t\t\t},","\t\t\tset: function set(key, value) {","\t\t\t\tif (keys.indexOf(key) === -1) {","\t\t\t\t\tkeys.push(key);","\t\t\t\t\tvalues.push(value);","\t\t\t\t}","\t\t\t},","\t\t\tdelete: function _delete(key) {","\t\t\t\tvar index = keys.indexOf(key);","\t\t\t\tif (index > -1) {","\t\t\t\t\tkeys.splice(index, 1);","\t\t\t\t\tvalues.splice(index, 1);","\t\t\t\t}","\t\t\t}","\t\t};","\t}();","","\tvar createEvent = function createEvent(name) {","\t\treturn new Event(name, { bubbles: true });","\t};","\ttry {","\t\tnew Event('test');","\t} catch (e) {","\t\t// IE does not support `new Event()`","\t\tcreateEvent = function createEvent(name) {","\t\t\tvar evt = document.createEvent('Event');","\t\t\tevt.initEvent(name, true, false);","\t\t\treturn evt;","\t\t};","\t}","","\tfunction assign(ta) {","\t\tif (!ta || !ta.nodeName || ta.nodeName !== 'TEXTAREA' || map.has(ta)) return;","","\t\tvar heightOffset = null;","\t\tvar clientWidth = null;","\t\tvar cachedHeight = null;","","\t\tfunction init() {","\t\t\tvar style = window.getComputedStyle(ta, null);","","\t\t\tif (style.resize === 'vertical') {","\t\t\t\tta.style.resize = 'none';","\t\t\t} else if (style.resize === 'both') {","\t\t\t\tta.style.resize = 'horizontal';","\t\t\t}","","\t\t\tif (style.boxSizing === 'content-box') {","\t\t\t\theightOffset = -(parseFloat(style.paddingTop) + parseFloat(style.paddingBottom));","\t\t\t} else {","\t\t\t\theightOffset = parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);","\t\t\t}","\t\t\t// Fix when a textarea is not on document body and heightOffset is Not a Number","\t\t\tif (isNaN(heightOffset)) {","\t\t\t\theightOffset = 0;","\t\t\t}","","\t\t\tupdate();","\t\t}","","\t\tfunction changeOverflow(value) {","\t\t\t{","\t\t\t\t// Chrome/Safari-specific fix:","\t\t\t\t// When the textarea y-overflow is hidden, Chrome/Safari do not reflow the text to account for the space","\t\t\t\t// made available by removing the scrollbar. The following forces the necessary text reflow.","\t\t\t\tvar width = ta.style.width;","\t\t\t\tta.style.width = '0px';","\t\t\t\t// Force reflow:","\t\t\t\t/* jshint ignore:start */","\t\t\t\tta.offsetWidth;","\t\t\t\t/* jshint ignore:end */","\t\t\t\tta.style.width = width;","\t\t\t}","","\t\t\tta.style.overflowY = value;","\t\t}","","\t\tfunction getParentOverflows(el) {","\t\t\tvar arr = [];","","\t\t\twhile (el && el.parentNode && el.parentNode instanceof Element) {","\t\t\t\tif (el.parentNode.scrollTop) {","\t\t\t\t\tarr.push({","\t\t\t\t\t\tnode: el.parentNode,","\t\t\t\t\t\tscrollTop: el.parentNode.scrollTop","\t\t\t\t\t});","\t\t\t\t}","\t\t\t\tel = el.parentNode;","\t\t\t}","","\t\t\treturn arr;","\t\t}","","\t\tfunction resize() {","\t\t\tif (ta.scrollHeight === 0) {","\t\t\t\t// If the scrollHeight is 0, then the element probably has display:none or is detached from the DOM.","\t\t\t\treturn;","\t\t\t}","","\t\t\tvar overflows = getParentOverflows(ta);","\t\t\tvar docTop = document.documentElement && document.documentElement.scrollTop; // Needed for Mobile IE (ticket #240)","","\t\t\tta.style.height = '';","\t\t\tta.style.height = ta.scrollHeight + heightOffset + 'px';","","\t\t\t// used to check if an update is actually necessary on window.resize","\t\t\tclientWidth = ta.clientWidth;","","\t\t\t// prevents scroll-position jumping","\t\t\toverflows.forEach(function (el) {","\t\t\t\tel.node.scrollTop = el.scrollTop;","\t\t\t});","","\t\t\tif (docTop) {","\t\t\t\tdocument.documentElement.scrollTop = docTop;","\t\t\t}","\t\t}","","\t\tfunction update() {","\t\t\tresize();","","\t\t\tvar styleHeight = Math.round(parseFloat(ta.style.height));","\t\t\tvar computed = window.getComputedStyle(ta, null);","","\t\t\t// Using offsetHeight as a replacement for computed.height in IE, because IE does not account use of border-box","\t\t\tvar actualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(computed.height)) : ta.offsetHeight;","","\t\t\t// The actual height not matching the style height (set via the resize method) indicates that ","\t\t\t// the max-height has been exceeded, in which case the overflow should be allowed.","\t\t\tif (actualHeight < styleHeight) {","\t\t\t\tif (computed.overflowY === 'hidden') {","\t\t\t\t\tchangeOverflow('scroll');","\t\t\t\t\tresize();","\t\t\t\t\tactualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;","\t\t\t\t}","\t\t\t} else {","\t\t\t\t// Normally keep overflow set to hidden, to avoid flash of scrollbar as the textarea expands.","\t\t\t\tif (computed.overflowY !== 'hidden') {","\t\t\t\t\tchangeOverflow('hidden');","\t\t\t\t\tresize();","\t\t\t\t\tactualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;","\t\t\t\t}","\t\t\t}","","\t\t\tif (cachedHeight !== actualHeight) {","\t\t\t\tcachedHeight = actualHeight;","\t\t\t\tvar evt = createEvent('autosize:resized');","\t\t\t\ttry {","\t\t\t\t\tta.dispatchEvent(evt);","\t\t\t\t} catch (err) {","\t\t\t\t\t// Firefox will throw an error on dispatchEvent for a detached element","\t\t\t\t\t// https://bugzilla.mozilla.org/show_bug.cgi?id=889376","\t\t\t\t}","\t\t\t}","\t\t}","","\t\tvar pageResize = function pageResize() {","\t\t\tif (ta.clientWidth !== clientWidth) {","\t\t\t\tupdate();","\t\t\t}","\t\t};","","\t\tvar destroy = function (style) {","\t\t\twindow.removeEventListener('resize', pageResize, false);","\t\t\tta.removeEventListener('input', update, false);","\t\t\tta.removeEventListener('keyup', update, false);","\t\t\tta.removeEventListener('autosize:destroy', destroy, false);","\t\t\tta.removeEventListener('autosize:update', update, false);","","\t\t\tObject.keys(style).forEach(function (key) {","\t\t\t\tta.style[key] = style[key];","\t\t\t});","","\t\t\tmap.delete(ta);","\t\t}.bind(ta, {","\t\t\theight: ta.style.height,","\t\t\tresize: ta.style.resize,","\t\t\toverflowY: ta.style.overflowY,","\t\t\toverflowX: ta.style.overflowX,","\t\t\twordWrap: ta.style.wordWrap","\t\t});","","\t\tta.addEventListener('autosize:destroy', destroy, false);","","\t\t// IE9 does not fire onpropertychange or oninput for deletions,","\t\t// so binding to onkeyup to catch most of those events.","\t\t// There is no way that I know of to detect something like 'cut' in IE9.","\t\tif ('onpropertychange' in ta && 'oninput' in ta) {","\t\t\tta.addEventListener('keyup', update, false);","\t\t}","","\t\twindow.addEventListener('resize', pageResize, false);","\t\tta.addEventListener('input', update, false);","\t\tta.addEventListener('autosize:update', update, false);","\t\tta.style.overflowX = 'hidden';","\t\tta.style.wordWrap = 'break-word';","","\t\tmap.set(ta, {","\t\t\tdestroy: destroy,","\t\t\tupdate: update","\t\t});","","\t\tinit();","\t}","","\tfunction destroy(ta) {","\t\tvar methods = map.get(ta);","\t\tif (methods) {","\t\t\tmethods.destroy();","\t\t}","\t}","","\tfunction update(ta) {","\t\tvar methods = map.get(ta);","\t\tif (methods) {","\t\t\tmethods.update();","\t\t}","\t}","","\tvar autosize = null;","","\t// Do nothing in Node.js environment and IE8 (or lower)","\tif (typeof window === 'undefined' || typeof window.getComputedStyle !== 'function') {","\t\tautosize = function autosize(el) {","\t\t\treturn el;","\t\t};","\t\tautosize.destroy = function (el) {","\t\t\treturn el;","\t\t};","\t\tautosize.update = function (el) {","\t\t\treturn el;","\t\t};","\t} else {","\t\tautosize = function autosize(el, options) {","\t\t\tif (el) {","\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], function (x) {","\t\t\t\t\treturn assign(x, options);","\t\t\t\t});","\t\t\t}","\t\t\treturn el;","\t\t};","\t\tautosize.destroy = function (el) {","\t\t\tif (el) {","\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], destroy);","\t\t\t}","\t\t\treturn el;","\t\t};","\t\tautosize.update = function (el) {","\t\t\tif (el) {","\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], update);","\t\t\t}","\t\t\treturn el;","\t\t};","\t}","","\texports.default = autosize;","\tmodule.exports = exports['default'];","});","/*!","\tautosize 4.0.2","\tlicense: MIT","\thttp://www.jacklmoore.com/autosize","*/","(function (global, factory) {","\tif (typeof define === \"function\" && define.amd) {","\t\tdefine(['module', 'exports'], factory);","\t} else if (typeof exports !== \"undefined\") {","\t\tfactory(module, exports);","\t} else {","\t\tvar mod = {","\t\t\texports: {}","\t\t};","\t\tfactory(mod, mod.exports);","\t\tglobal.autosize = mod.exports;","\t}","})(this, function (module, exports) {","\t'use strict';","","\tvar map = typeof Map === \"function\" ? new Map() : function () {","\t\tvar keys = [];","\t\tvar values = [];","","\t\treturn {","\t\t\thas: function has(key) {","\t\t\t\treturn keys.indexOf(key) > -1;","\t\t\t},","\t\t\tget: function get(key) {","\t\t\t\treturn values[keys.indexOf(key)];","\t\t\t},","\t\t\tset: function set(key, value) {","\t\t\t\tif (keys.indexOf(key) === -1) {","\t\t\t\t\tkeys.push(key);","\t\t\t\t\tvalues.push(value);","\t\t\t\t}","\t\t\t},","\t\t\tdelete: function _delete(key) {","\t\t\t\tvar index = keys.indexOf(key);","\t\t\t\tif (index > -1) {","\t\t\t\t\tkeys.splice(index, 1);","\t\t\t\t\tvalues.splice(index, 1);","\t\t\t\t}","\t\t\t}","\t\t};","\t}();","","\tvar createEvent = function createEvent(name) {","\t\treturn new Event(name, { bubbles: true });","\t};","\ttry {","\t\tnew Event('test');","\t} catch (e) {","\t\t// IE does not support `new Event()`","\t\tcreateEvent = function createEvent(name) {","\t\t\tvar evt = document.createEvent('Event');","\t\t\tevt.initEvent(name, true, false);","\t\t\treturn evt;","\t\t};","\t}","","\tfunction assign(ta) {","\t\tif (!ta || !ta.nodeName || ta.nodeName !== 'TEXTAREA' || map.has(ta)) return;","","\t\tvar heightOffset = null;","\t\tvar clientWidth = null;","\t\tvar cachedHeight = null;","","\t\tfunction init() {","\t\t\tvar style = window.getComputedStyle(ta, null);","","\t\t\tif (style.resize === 'vertical') {","\t\t\t\tta.style.resize = 'none';","\t\t\t} else if (style.resize === 'both') {","\t\t\t\tta.style.resize = 'horizontal';","\t\t\t}","","\t\t\tif (style.boxSizing === 'content-box') {","\t\t\t\theightOffset = -(parseFloat(style.paddingTop) + parseFloat(style.paddingBottom));","\t\t\t} else {","\t\t\t\theightOffset = parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);","\t\t\t}","\t\t\t// Fix when a textarea is not on document body and heightOffset is Not a Number","\t\t\tif (isNaN(heightOffset)) {","\t\t\t\theightOffset = 0;","\t\t\t}","","\t\t\tupdate();","\t\t}","","\t\tfunction changeOverflow(value) {","\t\t\t{","\t\t\t\t// Chrome/Safari-specific fix:","\t\t\t\t// When the textarea y-overflow is hidden, Chrome/Safari do not reflow the text to account for the space","\t\t\t\t// made available by removing the scrollbar. The following forces the necessary text reflow.","\t\t\t\tvar width = ta.style.width;","\t\t\t\tta.style.width = '0px';","\t\t\t\t// Force reflow:","\t\t\t\t/* jshint ignore:start */","\t\t\t\tta.offsetWidth;","\t\t\t\t/* jshint ignore:end */","\t\t\t\tta.style.width = width;","\t\t\t}","","\t\t\tta.style.overflowY = value;","\t\t}","","\t\tfunction getParentOverflows(el) {","\t\t\tvar arr = [];","","\t\t\twhile (el && el.parentNode && el.parentNode instanceof Element) {","\t\t\t\tif (el.parentNode.scrollTop) {","\t\t\t\t\tarr.push({","\t\t\t\t\t\tnode: el.parentNode,","\t\t\t\t\t\tscrollTop: el.parentNode.scrollTop","\t\t\t\t\t});","\t\t\t\t}","\t\t\t\tel = el.parentNode;","\t\t\t}","","\t\t\treturn arr;","\t\t}","","\t\tfunction resize() {","\t\t\tif (ta.scrollHeight === 0) {","\t\t\t\t// If the scrollHeight is 0, then the element probably has display:none or is detached from the DOM.","\t\t\t\treturn;","\t\t\t}","","\t\t\tvar overflows = getParentOverflows(ta);","\t\t\tvar docTop = document.documentElement && document.documentElement.scrollTop; // Needed for Mobile IE (ticket #240)","","\t\t\tta.style.height = '';","\t\t\tta.style.height = ta.scrollHeight + heightOffset + 'px';","","\t\t\t// used to check if an update is actually necessary on window.resize","\t\t\tclientWidth = ta.clientWidth;","","\t\t\t// prevents scroll-position jumping","\t\t\toverflows.forEach(function (el) {","\t\t\t\tel.node.scrollTop = el.scrollTop;","\t\t\t});","","\t\t\tif (docTop) {","\t\t\t\tdocument.documentElement.scrollTop = docTop;","\t\t\t}","\t\t}","","\t\tfunction update() {","\t\t\tresize();","","\t\t\tvar styleHeight = Math.round(parseFloat(ta.style.height));","\t\t\tvar computed = window.getComputedStyle(ta, null);","","\t\t\t// Using offsetHeight as a replacement for computed.height in IE, because IE does not account use of border-box","\t\t\tvar actualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(computed.height)) : ta.offsetHeight;","","\t\t\t// The actual height not matching the style height (set via the resize method) indicates that ","\t\t\t// the max-height has been exceeded, in which case the overflow should be allowed.","\t\t\tif (actualHeight < styleHeight) {","\t\t\t\tif (computed.overflowY === 'hidden') {","\t\t\t\t\tchangeOverflow('scroll');","\t\t\t\t\tresize();","\t\t\t\t\tactualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;","\t\t\t\t}","\t\t\t} else {","\t\t\t\t// Normally keep overflow set to hidden, to avoid flash of scrollbar as the textarea expands.","\t\t\t\tif (computed.overflowY !== 'hidden') {","\t\t\t\t\tchangeOverflow('hidden');","\t\t\t\t\tresize();","\t\t\t\t\tactualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;","\t\t\t\t}","\t\t\t}","","\t\t\tif (cachedHeight !== actualHeight) {","\t\t\t\tcachedHeight = actualHeight;","\t\t\t\tvar evt = createEvent('autosize:resized');","\t\t\t\ttry {","\t\t\t\t\tta.dispatchEvent(evt);","\t\t\t\t} catch (err) {","\t\t\t\t\t// Firefox will throw an error on dispatchEvent for a detached element","\t\t\t\t\t// https://bugzilla.mozilla.org/show_bug.cgi?id=889376","\t\t\t\t}","\t\t\t}","\t\t}","","\t\tvar pageResize = function pageResize() {","\t\t\tif (ta.clientWidth !== clientWidth) {","\t\t\t\tupdate();","\t\t\t}","\t\t};","","\t\tvar destroy = function (style) {","\t\t\twindow.removeEventListener('resize', pageResize, false);","\t\t\tta.removeEventListener('input', update, false);","\t\t\tta.removeEventListener('keyup', update, false);","\t\t\tta.removeEventListener('autosize:destroy', destroy, false);","\t\t\tta.removeEventListener('autosize:update', update, false);","","\t\t\tObject.keys(style).forEach(function (key) {","\t\t\t\tta.style[key] = style[key];","\t\t\t});","","\t\t\tmap.delete(ta);","\t\t}.bind(ta, {","\t\t\theight: ta.style.height,","\t\t\tresize: ta.style.resize,","\t\t\toverflowY: ta.style.overflowY,","\t\t\toverflowX: ta.style.overflowX,","\t\t\twordWrap: ta.style.wordWrap","\t\t});","","\t\tta.addEventListener('autosize:destroy', destroy, false);","","\t\t// IE9 does not fire onpropertychange or oninput for deletions,","\t\t// so binding to onkeyup to catch most of those events.","\t\t// There is no way that I know of to detect something like 'cut' in IE9.","\t\tif ('onpropertychange' in ta && 'oninput' in ta) {","\t\t\tta.addEventListener('keyup', update, false);","\t\t}","","\t\twindow.addEventListener('resize', pageResize, false);","\t\tta.addEventListener('input', update, false);","\t\tta.addEventListener('autosize:update', update, false);","\t\tta.style.overflowX = 'hidden';","\t\tta.style.wordWrap = 'break-word';","","\t\tmap.set(ta, {","\t\t\tdestroy: destroy,","\t\t\tupdate: update","\t\t});","","\t\tinit();","\t}","","\tfunction destroy(ta) {","\t\tvar methods = map.get(ta);","\t\tif (methods) {","\t\t\tmethods.destroy();","\t\t}","\t}","","\tfunction update(ta) {","\t\tvar methods = map.get(ta);","\t\tif (methods) {","\t\t\tmethods.update();","\t\t}","\t}","","\tvar autosize = null;","","\t// Do nothing in Node.js environment and IE8 (or lower)","\tif (typeof window === 'undefined' || typeof window.getComputedStyle !== 'function') {","\t\tautosize = function autosize(el) {","\t\t\treturn el;","\t\t};","\t\tautosize.destroy = function (el) {","\t\t\treturn el;","\t\t};","\t\tautosize.update = function (el) {","\t\t\treturn el;","\t\t};","\t} else {","\t\tautosize = function autosize(el, options) {","\t\t\tif (el) {","\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], function (x) {","\t\t\t\t\treturn assign(x, options);","\t\t\t\t});","\t\t\t}","\t\t\treturn el;","\t\t};","\t\tautosize.destroy = function (el) {","\t\t\tif (el) {","\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], destroy);","\t\t\t}","\t\t\treturn el;","\t\t};","\t\tautosize.update = function (el) {","\t\t\tif (el) {","\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], update);","\t\t\t}","\t\t\treturn el;","\t\t};","\t}","","\texports.default = autosize;","\tmodule.exports = exports['default'];","});"],"date":"2020-09-16T17:17:02.407Z"}